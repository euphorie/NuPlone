{"version":3,"file":"chunks/482.d9bd89efcd5bbfdd050c.min.js","mappings":"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","sources":["webpack://nuplone/./node_modules/redactor/src/plugins/widget/widget.js"],"sourcesContent":["(function($R)\n{\n    $R.add('plugin', 'widget', {\n        translations: {\n            en: {\n                \"widget\": \"Widget\",\n                \"widget-html-code\": \"Widget HTML Code\"\n            }\n        },\n        modals: {\n            'widget':\n                '<form action=\"\"> \\\n                    <div class=\"form-item\"> \\\n                        <label for=\"modal-widget-input\">## widget-html-code ##</label> \\\n                        <textarea id=\"modal-widget-input\" name=\"widget\" style=\"height: 200px;\"></textarea> \\\n                    </div> \\\n                </form>'\n        },\n        init: function(app)\n        {\n            this.app = app;\n            this.lang = app.lang;\n            this.opts = app.opts;\n            this.toolbar = app.toolbar;\n            this.component = app.component;\n            this.insertion = app.insertion;\n            this.inspector = app.inspector;\n            this.selection = app.selection;\n        },\n        // messages\n        onmodal: {\n            widget: {\n                opened: function($modal, $form)\n                {\n                    $form.getField('widget').focus();\n\n                    if (this.$currentItem)\n                    {\n                        var code = decodeURI(this.$currentItem.attr('data-widget-code'));\n                        $form.getField('widget').val(code);\n                    }\n                },\n                insert: function($modal, $form)\n                {\n                    var data = $form.getData();\n                    this._insert(data);\n                }\n            }\n        },\n        oncontextbar: function(e, contextbar)\n        {\n            var data = this.inspector.parse(e.target)\n            if (!data.isFigcaption() && data.isComponentType('widget'))\n            {\n                var node = data.getComponent();\n                var buttons = {\n                    \"edit\": {\n                        title: this.lang.get('edit'),\n                        api: 'plugin.widget.open',\n                        args: node\n                    },\n                    \"remove\": {\n                        title: this.lang.get('delete'),\n                        api: 'plugin.widget.remove',\n                        args: node\n                    }\n                };\n\n                contextbar.set(e, node, buttons, 'bottom');\n            }\n        },\n        onbutton: {\n            widget: {\n                observe: function(button)\n                {\n                    this._observeButton(button);\n                }\n            }\n        },\n\n        // public\n        start: function()\n        {\n            var obj = {\n                title: this.lang.get('widget'),\n                api: 'plugin.widget.open',\n                observe: 'widget'\n            };\n\n            var $button = this.toolbar.addButton('widget', obj);\n            $button.setIcon('<i class=\"re-icon-widget\"></i>');\n        },\n        open: function()\n\t\t{\n            this.$currentItem = this._getCurrent();\n\n            var options = {\n                title: this.lang.get('widget'),\n                width: '600px',\n                name: 'widget',\n                handle: 'insert',\n                commands: {\n                    insert: { title: (this.$currentItem) ? this.lang.get('save') : this.lang.get('insert') },\n                    cancel: { title: this.lang.get('cancel') }\n                }\n            };\n\n            this.app.api('module.modal.build', options);\n\t\t},\n        remove: function(node)\n        {\n            this.component.remove(node);\n        },\n\n        // private\n\t\t_getCurrent: function()\n\t\t{\n    \t\tvar current = this.selection.getCurrent();\n    \t\tvar data = this.inspector.parse(current);\n    \t\tif (data.isComponentType('widget'))\n    \t\t{\n        \t\treturn this.component.build(data.getComponent());\n    \t\t}\n\t\t},\n\t\t_insert: function(data)\n\t\t{\n    \t\tthis.app.api('module.modal.close');\n\n    \t\tif (data.widget.trim() === '')\n    \t\t{\n        \t    return;\n    \t\t}\n\n    \t\tvar html = (this._isHtmlString(data.widget)) ? data.widget : document.createTextNode(data.widget);\n            var $component = this.component.create('widget', html);\n            $component.attr('data-widget-code', encodeURI(data.widget.trim()));\n    \t\tthis.insertion.insertHtml($component);\n\n\t\t},\n        _isHtmlString: function(html)\n        {\n            return !(typeof html === 'string' && !/^\\s*<(\\w+|!)[^>]*>/.test(html));\n        },\n\t\t_observeButton: function(button)\n\t\t{\n    \t\tvar current = this.selection.getCurrent();\n    \t\tvar data = this.inspector.parse(current);\n\n    \t\tif (data.isComponentType('table')) button.disable();\n    \t\telse button.enable();\n\t\t}\n    });\n})(Redactor);"],"names":["Redactor","add","translations","en","modals","init","app","this","lang","opts","toolbar","component","insertion","inspector","selection","onmodal","widget","opened","$modal","$form","getField","focus","$currentItem","code","decodeURI","attr","val","insert","data","getData","_insert","oncontextbar","e","contextbar","parse","target","isFigcaption","isComponentType","node","getComponent","buttons","title","get","api","args","set","onbutton","observe","button","_observeButton","start","obj","addButton","setIcon","open","_getCurrent","options","width","name","handle","commands","cancel","remove","current","getCurrent","build","trim","html","_isHtmlString","document","createTextNode","$component","create","encodeURI","insertHtml","test","disable","enable"],"sourceRoot":""}